// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package bdaybot // import "github.com/j-fuentes/bdaybot-slack/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GoogleSheet struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleSheet) Reset()         { *m = GoogleSheet{} }
func (m *GoogleSheet) String() string { return proto.CompactTextString(m) }
func (*GoogleSheet) ProtoMessage()    {}
func (*GoogleSheet) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_a7db8c34f8f4364f, []int{0}
}
func (m *GoogleSheet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleSheet.Unmarshal(m, b)
}
func (m *GoogleSheet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleSheet.Marshal(b, m, deterministic)
}
func (dst *GoogleSheet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleSheet.Merge(dst, src)
}
func (m *GoogleSheet) XXX_Size() int {
	return xxx_messageInfo_GoogleSheet.Size(m)
}
func (m *GoogleSheet) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleSheet.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleSheet proto.InternalMessageInfo

func (m *GoogleSheet) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Calendar struct {
	// Types that are valid to be assigned to Calendar:
	//	*Calendar_GoogleSheet
	Calendar             isCalendar_Calendar `protobuf_oneof:"calendar"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Calendar) Reset()         { *m = Calendar{} }
func (m *Calendar) String() string { return proto.CompactTextString(m) }
func (*Calendar) ProtoMessage()    {}
func (*Calendar) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_a7db8c34f8f4364f, []int{1}
}
func (m *Calendar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Calendar.Unmarshal(m, b)
}
func (m *Calendar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Calendar.Marshal(b, m, deterministic)
}
func (dst *Calendar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Calendar.Merge(dst, src)
}
func (m *Calendar) XXX_Size() int {
	return xxx_messageInfo_Calendar.Size(m)
}
func (m *Calendar) XXX_DiscardUnknown() {
	xxx_messageInfo_Calendar.DiscardUnknown(m)
}

var xxx_messageInfo_Calendar proto.InternalMessageInfo

type isCalendar_Calendar interface {
	isCalendar_Calendar()
}

type Calendar_GoogleSheet struct {
	GoogleSheet *GoogleSheet `protobuf:"bytes,1,opt,name=google_sheet,json=googleSheet,oneof"`
}

func (*Calendar_GoogleSheet) isCalendar_Calendar() {}

func (m *Calendar) GetCalendar() isCalendar_Calendar {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *Calendar) GetGoogleSheet() *GoogleSheet {
	if x, ok := m.GetCalendar().(*Calendar_GoogleSheet); ok {
		return x.GoogleSheet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Calendar) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Calendar_OneofMarshaler, _Calendar_OneofUnmarshaler, _Calendar_OneofSizer, []interface{}{
		(*Calendar_GoogleSheet)(nil),
	}
}

func _Calendar_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Calendar)
	// calendar
	switch x := m.Calendar.(type) {
	case *Calendar_GoogleSheet:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GoogleSheet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Calendar.Calendar has unexpected type %T", x)
	}
	return nil
}

func _Calendar_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Calendar)
	switch tag {
	case 1: // calendar.google_sheet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GoogleSheet)
		err := b.DecodeMessage(msg)
		m.Calendar = &Calendar_GoogleSheet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Calendar_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Calendar)
	// calendar
	switch x := m.Calendar.(type) {
	case *Calendar_GoogleSheet:
		s := proto.Size(x.GoogleSheet)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OAuth2 struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret" json:"client_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OAuth2) Reset()         { *m = OAuth2{} }
func (m *OAuth2) String() string { return proto.CompactTextString(m) }
func (*OAuth2) ProtoMessage()    {}
func (*OAuth2) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_a7db8c34f8f4364f, []int{2}
}
func (m *OAuth2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OAuth2.Unmarshal(m, b)
}
func (m *OAuth2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OAuth2.Marshal(b, m, deterministic)
}
func (dst *OAuth2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuth2.Merge(dst, src)
}
func (m *OAuth2) XXX_Size() int {
	return xxx_messageInfo_OAuth2.Size(m)
}
func (m *OAuth2) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuth2.DiscardUnknown(m)
}

var xxx_messageInfo_OAuth2 proto.InternalMessageInfo

func (m *OAuth2) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *OAuth2) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

type Slack struct {
	WebhookUrl           string   `protobuf:"bytes,1,opt,name=webhook_url,json=webhookUrl" json:"webhook_url,omitempty"`
	AdminWebhookUrl      string   `protobuf:"bytes,4,opt,name=admin_webhook_url,json=adminWebhookUrl" json:"admin_webhook_url,omitempty"`
	SalutePrefix         string   `protobuf:"bytes,2,opt,name=salute_prefix,json=salutePrefix" json:"salute_prefix,omitempty"`
	SaluteSuffix         string   `protobuf:"bytes,3,opt,name=salute_suffix,json=saluteSuffix" json:"salute_suffix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Slack) Reset()         { *m = Slack{} }
func (m *Slack) String() string { return proto.CompactTextString(m) }
func (*Slack) ProtoMessage()    {}
func (*Slack) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_a7db8c34f8f4364f, []int{3}
}
func (m *Slack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Slack.Unmarshal(m, b)
}
func (m *Slack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Slack.Marshal(b, m, deterministic)
}
func (dst *Slack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Slack.Merge(dst, src)
}
func (m *Slack) XXX_Size() int {
	return xxx_messageInfo_Slack.Size(m)
}
func (m *Slack) XXX_DiscardUnknown() {
	xxx_messageInfo_Slack.DiscardUnknown(m)
}

var xxx_messageInfo_Slack proto.InternalMessageInfo

func (m *Slack) GetWebhookUrl() string {
	if m != nil {
		return m.WebhookUrl
	}
	return ""
}

func (m *Slack) GetAdminWebhookUrl() string {
	if m != nil {
		return m.AdminWebhookUrl
	}
	return ""
}

func (m *Slack) GetSalutePrefix() string {
	if m != nil {
		return m.SalutePrefix
	}
	return ""
}

func (m *Slack) GetSaluteSuffix() string {
	if m != nil {
		return m.SaluteSuffix
	}
	return ""
}

type Config struct {
	Calendar             *Calendar `protobuf:"bytes,1,opt,name=calendar" json:"calendar,omitempty"`
	Oauth2               *OAuth2   `protobuf:"bytes,2,opt,name=oauth2" json:"oauth2,omitempty"`
	Slack                *Slack    `protobuf:"bytes,3,opt,name=slack" json:"slack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_a7db8c34f8f4364f, []int{4}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetCalendar() *Calendar {
	if m != nil {
		return m.Calendar
	}
	return nil
}

func (m *Config) GetOauth2() *OAuth2 {
	if m != nil {
		return m.Oauth2
	}
	return nil
}

func (m *Config) GetSlack() *Slack {
	if m != nil {
		return m.Slack
	}
	return nil
}

func init() {
	proto.RegisterType((*GoogleSheet)(nil), "bdaybot.GoogleSheet")
	proto.RegisterType((*Calendar)(nil), "bdaybot.Calendar")
	proto.RegisterType((*OAuth2)(nil), "bdaybot.OAuth2")
	proto.RegisterType((*Slack)(nil), "bdaybot.Slack")
	proto.RegisterType((*Config)(nil), "bdaybot.Config")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_config_a7db8c34f8f4364f) }

var fileDescriptor_config_a7db8c34f8f4364f = []byte{
	// 350 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0xcd, 0x4e, 0xb3, 0x40,
	0x14, 0x40, 0x3f, 0xbe, 0x5a, 0x6c, 0x2f, 0xad, 0xb5, 0x13, 0x17, 0x4d, 0x5c, 0xd4, 0x50, 0x13,
	0x8d, 0x49, 0xa9, 0xc1, 0x95, 0x71, 0x65, 0xbb, 0xf0, 0x67, 0xa3, 0x42, 0x8c, 0x89, 0x1b, 0x32,
	0xc0, 0xf0, 0x63, 0x29, 0xd3, 0xc0, 0x10, 0xf5, 0x05, 0x7c, 0x0c, 0x9f, 0xd5, 0x70, 0x99, 0x02,
	0x3b, 0x38, 0xf7, 0xe4, 0xde, 0x70, 0x02, 0x0c, 0x3c, 0x9e, 0x06, 0x71, 0x68, 0x6c, 0x33, 0x2e,
	0x38, 0xd9, 0x77, 0x7d, 0xfa, 0xed, 0x72, 0xa1, 0x4f, 0x41, 0xbb, 0xe3, 0x3c, 0x4c, 0x98, 0x1d,
	0x31, 0x26, 0xc8, 0x21, 0x74, 0x8a, 0x2c, 0x99, 0x28, 0x27, 0xca, 0x79, 0xdf, 0x2a, 0x1f, 0xf5,
	0x17, 0xe8, 0xad, 0x68, 0xc2, 0x52, 0x9f, 0x66, 0xe4, 0x1a, 0x06, 0x21, 0xca, 0x4e, 0x5e, 0xda,
	0xa8, 0x69, 0xe6, 0x91, 0x21, 0x97, 0x19, 0xad, 0x4d, 0xf7, 0xff, 0x2c, 0x2d, 0x6c, 0x5e, 0x97,
	0x00, 0x3d, 0x4f, 0xae, 0xd1, 0x1f, 0x41, 0x7d, 0xba, 0x2d, 0x44, 0x64, 0x92, 0x63, 0xe8, 0x7b,
	0x49, 0xcc, 0x52, 0xe1, 0xc4, 0xbe, 0x3c, 0xda, 0xab, 0xc0, 0x83, 0x4f, 0x66, 0x30, 0x94, 0xc3,
	0x9c, 0x79, 0x19, 0x13, 0x93, 0xff, 0x28, 0x0c, 0x2a, 0x68, 0x23, 0xd3, 0x7f, 0x15, 0xe8, 0xda,
	0x09, 0xf5, 0xd6, 0x64, 0x0a, 0xda, 0x27, 0x73, 0x23, 0xce, 0xd7, 0x4e, 0xf3, 0x09, 0x20, 0xd1,
	0x6b, 0x96, 0x90, 0x0b, 0x18, 0x53, 0x7f, 0x13, 0xa7, 0x4e, 0x5b, 0xdb, 0x43, 0x6d, 0x84, 0x83,
	0xb7, 0xc6, 0x9d, 0xc1, 0x30, 0xa7, 0x49, 0x21, 0x98, 0xb3, 0xcd, 0x58, 0x10, 0x7f, 0xed, 0x6e,
	0x57, 0xf0, 0x19, 0x59, 0x4b, 0xca, 0x8b, 0xa0, 0x94, 0x3a, 0x6d, 0xc9, 0x46, 0xa6, 0xff, 0x28,
	0xa0, 0xae, 0x30, 0x3d, 0x99, 0x37, 0x0d, 0x64, 0xba, 0x71, 0x9d, 0x6e, 0xd7, 0xd8, 0xaa, 0x15,
	0x72, 0x06, 0x2a, 0xa7, 0x65, 0x26, 0x3c, 0xae, 0x99, 0xa3, 0x5a, 0xae, 0xea, 0x59, 0x72, 0x4c,
	0x4e, 0xa1, 0x9b, 0x97, 0x09, 0xf0, 0xbe, 0x66, 0x1e, 0xd4, 0x1e, 0x86, 0xb1, 0xaa, 0xe1, 0xf2,
	0xf2, 0xdd, 0x08, 0x63, 0x11, 0x15, 0xae, 0xe1, 0xf1, 0xcd, 0xe2, 0x63, 0x1e, 0x14, 0x2c, 0x15,
	0x2c, 0x5f, 0x48, 0x79, 0x8e, 0xd6, 0x82, 0x6e, 0xe3, 0x1b, 0x49, 0x5c, 0x15, 0xff, 0x95, 0xab,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x71, 0xea, 0xb5, 0x3b, 0x02, 0x00, 0x00,
}
