// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bday.proto

package bdaybot // import "github.com/j-fuentes/bdaybot-slack/api"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Bday struct {
	UserID               string     `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Date                 *Bday_Date `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bday) Reset()         { *m = Bday{} }
func (m *Bday) String() string { return proto.CompactTextString(m) }
func (*Bday) ProtoMessage()    {}
func (*Bday) Descriptor() ([]byte, []int) {
	return fileDescriptor_bday_68f4235a5f857b71, []int{0}
}
func (m *Bday) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bday.Unmarshal(m, b)
}
func (m *Bday) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bday.Marshal(b, m, deterministic)
}
func (dst *Bday) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bday.Merge(dst, src)
}
func (m *Bday) XXX_Size() int {
	return xxx_messageInfo_Bday.Size(m)
}
func (m *Bday) XXX_DiscardUnknown() {
	xxx_messageInfo_Bday.DiscardUnknown(m)
}

var xxx_messageInfo_Bday proto.InternalMessageInfo

func (m *Bday) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Bday) GetDate() *Bday_Date {
	if m != nil {
		return m.Date
	}
	return nil
}

type Bday_Date struct {
	Month                int32    `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,1,opt,name=day" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bday_Date) Reset()         { *m = Bday_Date{} }
func (m *Bday_Date) String() string { return proto.CompactTextString(m) }
func (*Bday_Date) ProtoMessage()    {}
func (*Bday_Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_bday_68f4235a5f857b71, []int{0, 0}
}
func (m *Bday_Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bday_Date.Unmarshal(m, b)
}
func (m *Bday_Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bday_Date.Marshal(b, m, deterministic)
}
func (dst *Bday_Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bday_Date.Merge(dst, src)
}
func (m *Bday_Date) XXX_Size() int {
	return xxx_messageInfo_Bday_Date.Size(m)
}
func (m *Bday_Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Bday_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Bday_Date proto.InternalMessageInfo

func (m *Bday_Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Bday_Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func init() {
	proto.RegisterType((*Bday)(nil), "bdaybot.Bday")
	proto.RegisterType((*Bday_Date)(nil), "bdaybot.Bday.Date")
}

func init() { proto.RegisterFile("bday.proto", fileDescriptor_bday_68f4235a5f857b71) }

var fileDescriptor_bday_68f4235a5f857b71 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4a, 0x49, 0xac,
	0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x07, 0xb1, 0x93, 0xf2, 0x4b, 0x94, 0xca, 0xb8,
	0x58, 0x9c, 0x52, 0x12, 0x2b, 0x85, 0xc4, 0xb8, 0xd8, 0x4a, 0x8b, 0x53, 0x8b, 0x3c, 0x5d, 0x24,
	0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xa0, 0x3c, 0x21, 0x35, 0x2e, 0x96, 0x94, 0xc4, 0x92, 0x54,
	0x09, 0x26, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x21, 0x3d, 0xa8, 0x3e, 0x3d, 0x90, 0x26, 0x3d, 0x97,
	0xc4, 0x92, 0xd4, 0x20, 0xb0, 0xbc, 0x94, 0x1e, 0x17, 0x0b, 0x88, 0x27, 0x24, 0xc2, 0xc5, 0x9a,
	0x9b, 0x9f, 0x57, 0x92, 0x01, 0xd6, 0xc0, 0x1a, 0x04, 0xe1, 0x08, 0x09, 0x70, 0x31, 0xa7, 0x24,
	0x56, 0x82, 0x8d, 0x66, 0x0d, 0x02, 0x31, 0x9d, 0x0c, 0xa2, 0xf4, 0xd2, 0x33, 0x4b, 0x32, 0x4a,
	0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0xb3, 0x74, 0xd3, 0x4a, 0x53, 0xf3, 0x4a, 0x52, 0x8b, 0xf5,
	0xa1, 0xe6, 0xeb, 0x16, 0xe7, 0x24, 0x26, 0x67, 0xeb, 0x27, 0x16, 0x64, 0x5a, 0x43, 0x45, 0x92,
	0xd8, 0xc0, 0x2e, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x06, 0x19, 0x0d, 0xd8, 0xc7, 0x00,
	0x00, 0x00,
}
